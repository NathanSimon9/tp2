[gd_scene load_steps=40 format=3 uid="uid://3uog7aftmdeu"]

[ext_resource type="Texture2D" uid="uid://c2raopp0p6tsp" path="res://medias/acroupir.png" id="1_7sgir"]
[ext_resource type="Texture2D" uid="uid://b6yhw8as2t8w2" path="res://medias/sprites-1.png" id="1_s3281"]
[ext_resource type="Texture2D" uid="uid://d1vweltt53ux8" path="res://medias/sauter.png" id="2_6bys2"]
[ext_resource type="Texture2D" uid="uid://kbgbm7nksnso" path="res://medias/mort.png" id="2_gwbwo"]
[ext_resource type="Texture2D" uid="uid://bieolhmol4lkt" path="res://medias/repos.png" id="2_qfwe2"]
[ext_resource type="Texture2D" uid="uid://dh2k24m61pf6j" path="res://medias/meurt zombie.png" id="3_kyng0"]
[ext_resource type="Script" uid="uid://c0x2u3kphok71" path="res://script/camera_2d.gd" id="7_wuymh"]
[ext_resource type="AudioStream" uid="uid://djrovsrssouto" path="res://sons/cartoon-jump-6462.mp3" id="8_tn5gq"]
[ext_resource type="AudioStream" uid="uid://crj0ia7hponat" path="res://sons/man-death-scream-186763.mp3" id="9_wo6p4"]
[ext_resource type="AudioStream" uid="uid://dwol6635w6c3u" path="res://sons/Firefly_audio_man_drowning_screaming_under_water_variation2 (1).wav" id="10_3hj08"]
[ext_resource type="AudioStream" uid="uid://d1cyr67d0cmbn" path="res://sons/Firefly_audio_grass_footstep_variation4.wav" id="11_30wqp"]
[ext_resource type="AudioStream" uid="uid://cd41qr2iux8ew" path="res://sons/Firefly_audio_big_splash_variation3.wav" id="12_onr3x"]
[ext_resource type="AudioStream" uid="uid://br4xu48a277d8" path="res://sons/Firefly_audio_winning_sound_for_game_variation1.wav" id="13_gos7e"]

[sub_resource type="GDScript" id="GDScript_6bys2"]
script/source = "extends CharacterBody2D

# --- Vitesse ---
const SPEED := 200.0
const BOOST_SPEED := 400.0
const JUMP_VELOCITY := -500.0

# --- États ---
enum Etat { COURIR, MARCHE, REPOS, SAUT, MORT, ACROUPIR }
var etat_courant := Etat.REPOS

# --- Vie ---
var has_died := false
var has_won := false 
var max_hp := 3
var hp := max_hp
@onready var hearts := $\"../CanvasLayer/HBoxContainer\".get_children()

# --- Pièces ---
var coins := 0
@onready var coin_label := $\"../CanvasLayer/CoinCounter/Label\"

# --- Position de départ ---
var start_position := Vector2.ZERO

# --- Mouvement autorisé ---
var can_move := true  # bloque le mouvement du joueur après victoire ou défaite

func _ready() -> void:
	$AnimatedSprite2D.modulate = Color(1,1,1,1)
	start_position = global_position
	update_hearts()
	update_coins()
	$\"../CanvasLayer2/VictoryLabel\".visible = false

# --- Mets à jour les cœurs ---
func update_hearts():
	for i in range(len(hearts)):
		if i < hp:
			hearts[i].texture = preload(\"res://medias/coeur.png\")
		else:
			hearts[i].texture = preload(\"res://medias/coeur_vide.png\")

# --- Mets à jour les pièces ---
func update_coins():
	coin_label.text = str(coins)

# --- Ajoute une pièce ---
func add_coin(amount: int = 1) -> void:
	if has_won: # ✅ on ne peut plus ramasser ni déclencher de victoire après la fin
		return
	coins += amount
	update_coins()
	if coins > 14:
		win_game()

# --- Fonction victoire ---
func win_game():
	if has_won: # ✅ empêche plusieurs appels
		return
	has_won = true # ✅ marquer la victoire

	var victory_label = $\"../CanvasLayer2/VictoryLabel\"
	victory_label.text = \"Bravo ! Vous avez gagné !\"
	victory_label.visible = true

	# Musique victoire
	$AudioStreamPlayer2D6.play()
	$\"../AudioStreamPlayer2D\".stop()
	$\"../AudioStreamPlayer2D2\".stop()
	$\"../AudioStreamPlayer2D3\".stop()
	$\"../AudioStreamPlayer2D4\".stop()

	# Bloquer tout mouvement
	can_move = false
	velocity.x = 0
	etat_courant = Etat.REPOS
	$AnimatedSprite2D.play(\"repos\")

	await get_tree().create_timer(5.0).timeout
	get_tree().reload_current_scene()

# --- Fonction défaite ---
func lose_game():
	if has_won: # ✅ ne peut pas perdre après victoire
		return

	var victory_label = $\"../CanvasLayer2/VictoryLabel\"
	victory_label.text = \"Vous avez perdu !\"
	victory_label.visible = true

	# Musique de défaite
	$AudioStreamPlayer2D5.play()
	$\"../AudioStreamPlayer2D\".stop()
	$\"../AudioStreamPlayer2D2\".stop()
	$\"../AudioStreamPlayer2D3\".stop()
	$\"../AudioStreamPlayer2D4\".stop()

	# Bloquer tout mouvement
	can_move = false
	velocity.x = 0

	await get_tree().create_timer(5.0).timeout
	get_tree().reload_current_scene()

# --- Physique et états ---
func _physics_process(delta: float) -> void:
	if not can_move:
		velocity += get_gravity() * delta
		move_and_slide()
		return

	var direction := Input.get_axis(\"marche_arriere\", \"marche\")
	var pressing_bas := Input.is_key_pressed(KEY_S) or Input.is_key_pressed(KEY_DOWN) or Input.is_action_pressed(\"bas\")

	# --- Gestion état MORT ---
	if etat_courant == Etat.MORT:
		velocity += get_gravity() * delta
		move_and_slide()
		return

	# --- Détection des états ---
	if not is_on_floor():
		if pressing_bas:
			etat_courant = Etat.ACROUPIR
		else:
			etat_courant = Etat.SAUT
	elif pressing_bas:
		etat_courant = Etat.ACROUPIR
	elif is_on_floor() and direction == 0:
		etat_courant = Etat.REPOS
	elif is_on_floor() and Input.is_key_pressed(KEY_SHIFT) and direction != 0:
		etat_courant = Etat.COURIR
	elif is_on_floor() and direction != 0:
		etat_courant = Etat.MARCHE

	# --- Application des états ---
	match etat_courant:
		Etat.SAUT:
			$AnimatedSprite2D.play(\"sauter\")
			velocity += get_gravity() * delta
			if pressing_bas:
				velocity.y = 600
			if Input.is_action_just_pressed(\"marche\"):
				velocity.x = direction * SPEED
			if Input.is_action_just_pressed(\"marche_arriere\"):
				velocity.x = direction * SPEED
			if Input.is_action_just_pressed(\"courire\"):
				velocity.x = direction * BOOST_SPEED
			if Input.is_action_just_pressed(\"sauter\") and is_on_floor():
				velocity.y = JUMP_VELOCITY

		Etat.REPOS:
			$AnimatedSprite2D.play(\"repos\")
			velocity.x = 0
			if Input.is_action_just_pressed(\"sauter\"):
				$AudioStreamPlayer2D.play()
				velocity.y = JUMP_VELOCITY

		Etat.MARCHE:
			$AnimatedSprite2D.play(\"marcher\")
			velocity.x = direction * SPEED
			if Input.is_action_just_pressed(\"sauter\"):
				$AudioStreamPlayer2D.play()
				velocity.y = JUMP_VELOCITY

		Etat.COURIR:
			$AnimatedSprite2D.play(\"courire\")
			velocity.x = direction * BOOST_SPEED
			if Input.is_action_just_pressed(\"sauter\"):
				$AudioStreamPlayer2D.play()
				velocity.y = JUMP_VELOCITY

		Etat.ACROUPIR:
			$AnimatedSprite2D.play(\"acroupir\")
			if is_on_floor():
				velocity.x = lerp(velocity.x, 0.0, 1.0 * delta)
			else:
				velocity.y = 600

	$AnimatedSprite2D.flip_h = velocity.x < 0
	move_and_slide()

# --- Mort dans le trou ---
func _on_area_2d_body_entered(body: Node2D) -> void:
	if has_won: # ✅ empêche de mourir après victoire
		return
	if body == self:
		_die_and_reset()

func _die_and_reset() -> void:
	if has_won: # ✅ empêche de mourir après victoire
		return
	etat_courant = Etat.MORT
	var knock_dir = sign(global_position.x - start_position.x)
	if knock_dir == 0:
		knock_dir = 1
	velocity.x = 100 * knock_dir
	velocity.y = 0
	$AnimatedSprite2D.play(\"meurt\")
	$AudioStreamPlayer2D5.play()
	$AudioStreamPlayer2D3.play()
	$AnimatedSprite2D.modulate = Color(1,1,1,0.5)
	hp -= 1
	update_hearts()
	await get_tree().create_timer(1.0).timeout

	if hp <= 0:
		lose_game()
		return

	hp = max(hp, 0)
	global_position = start_position
	$AnimatedSprite2D.modulate = Color(1,1,1,1)
	$AnimatedSprite2D.play(\"repos\")
	etat_courant = Etat.REPOS
	velocity = Vector2.ZERO

# --- Mort par ennemi ---
func _die_hit_and_reset(enemy_global_position: Vector2) -> void:
	if has_won: # ✅ empêche de mourir après victoire
		return
	if has_died:
		return
	has_died = true
	hp -= 1
	update_hearts()
	etat_courant = Etat.MORT
	var knock_dir = sign(global_position.x - enemy_global_position.x)
	if knock_dir == 0:
		knock_dir = 1
	velocity.x = 300 * knock_dir
	velocity.y = -200
	$AnimatedSprite2D.modulate = Color(1,0.5,0.5,1)
	$AnimatedSprite2D.play(\"meurt_frapper\")
	$AudioStreamPlayer2D2.play()
	await get_tree().create_timer(1.0).timeout
	has_died = false

	if hp <= 0:
		lose_game()
		return

	hp = max(hp, 0)
	global_position = start_position
	$AnimatedSprite2D.modulate = Color(1,1,1,1)
	$AnimatedSprite2D.play(\"repos\")
	etat_courant = Etat.REPOS
	velocity = Vector2.ZERO

func apply_spring_force(force: Vector2) -> void:
	velocity.y = force.y

func _on_area_2d_2_body_entered(body: Node2D) -> void:
	if has_won: # ✅ empêche la mort après victoire
		return
	if body.has_method(\"_die_hit_and_reset\"):
		body._die_hit_and_reset(global_position)
"

[sub_resource type="AtlasTexture" id="AtlasTexture_3lvrx"]
atlas = ExtResource("1_7sgir")
region = Rect2(95, 0, 220, 493)

[sub_resource type="AtlasTexture" id="AtlasTexture_7eult"]
atlas = ExtResource("1_7sgir")
region = Rect2(339, 0, 221, 507)

[sub_resource type="AtlasTexture" id="AtlasTexture_l6u5r"]
atlas = ExtResource("1_7sgir")
region = Rect2(597, 0, 221, 507)

[sub_resource type="AtlasTexture" id="AtlasTexture_qfwe2"]
atlas = ExtResource("1_s3281")
region = Rect2(5, 394, 225, 394)

[sub_resource type="AtlasTexture" id="AtlasTexture_gwbwo"]
atlas = ExtResource("1_s3281")
region = Rect2(230, 394, 225, 394)

[sub_resource type="AtlasTexture" id="AtlasTexture_kyng0"]
atlas = ExtResource("1_s3281")
region = Rect2(455, 394, 225, 394)

[sub_resource type="AtlasTexture" id="AtlasTexture_7sgir"]
atlas = ExtResource("1_s3281")
region = Rect2(680, 394, 225, 394)

[sub_resource type="AtlasTexture" id="AtlasTexture_wuymh"]
atlas = ExtResource("1_s3281")
region = Rect2(392, 0, 213, 377)

[sub_resource type="AtlasTexture" id="AtlasTexture_tn5gq"]
atlas = ExtResource("1_s3281")
region = Rect2(179, 0, 213, 377)

[sub_resource type="AtlasTexture" id="AtlasTexture_wo6p4"]
atlas = ExtResource("1_s3281")
region = Rect2(605, 0, 213, 377)

[sub_resource type="AtlasTexture" id="AtlasTexture_0hakg"]
atlas = ExtResource("2_gwbwo")
region = Rect2(48, 0, 222, 423)

[sub_resource type="AtlasTexture" id="AtlasTexture_lg1iq"]
atlas = ExtResource("2_gwbwo")
region = Rect2(270, 0, 222, 423)

[sub_resource type="AtlasTexture" id="AtlasTexture_7ewps"]
atlas = ExtResource("2_gwbwo")
region = Rect2(521, 0, 285, 396)

[sub_resource type="AtlasTexture" id="AtlasTexture_l3uw5"]
atlas = ExtResource("2_gwbwo")
region = Rect2(31, 396, 382, 396)

[sub_resource type="AtlasTexture" id="AtlasTexture_cv775"]
atlas = ExtResource("2_gwbwo")
region = Rect2(413, 396, 382, 396)

[sub_resource type="AtlasTexture" id="AtlasTexture_cgkrl"]
atlas = ExtResource("3_kyng0")
region = Rect2(31, 0, 240, 428)

[sub_resource type="AtlasTexture" id="AtlasTexture_ltmng"]
atlas = ExtResource("3_kyng0")
region = Rect2(255, 0, 240, 428)

[sub_resource type="AtlasTexture" id="AtlasTexture_kul21"]
atlas = ExtResource("3_kyng0")
region = Rect2(497, 0, 353, 443)

[sub_resource type="AtlasTexture" id="AtlasTexture_bn7gp"]
atlas = ExtResource("3_kyng0")
region = Rect2(24, 382, 346, 303)

[sub_resource type="AtlasTexture" id="AtlasTexture_onr3x"]
atlas = ExtResource("2_qfwe2")
region = Rect2(109, 0, 201, 382)

[sub_resource type="AtlasTexture" id="AtlasTexture_gos7e"]
atlas = ExtResource("2_qfwe2")
region = Rect2(310, 0, 201, 382)

[sub_resource type="AtlasTexture" id="AtlasTexture_3hj08"]
atlas = ExtResource("2_6bys2")
region = Rect2(90, 0, 226, 427)

[sub_resource type="AtlasTexture" id="AtlasTexture_30wqp"]
atlas = ExtResource("2_6bys2")
region = Rect2(316, 0, 226, 427)

[sub_resource type="SpriteFrames" id="SpriteFrames_kyng0"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_3lvrx")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7eult")
}, {
"duration": 100.4,
"texture": SubResource("AtlasTexture_l6u5r")
}, {
"duration": 100.4,
"texture": SubResource("AtlasTexture_l6u5r")
}, {
"duration": 100.4,
"texture": SubResource("AtlasTexture_l6u5r")
}],
"loop": false,
"name": &"acroupir",
"speed": 8.0
}, {
"frames": [{
"duration": 0.6,
"texture": SubResource("AtlasTexture_qfwe2")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gwbwo")
}, {
"duration": 0.6,
"texture": SubResource("AtlasTexture_kyng0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7sgir")
}],
"loop": true,
"name": &"courire",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_wuymh")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_tn5gq")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_wo6p4")
}],
"loop": true,
"name": &"marcher",
"speed": 5.0
}, {
"frames": [{
"duration": 0.6,
"texture": SubResource("AtlasTexture_0hakg")
}, {
"duration": 0.9,
"texture": SubResource("AtlasTexture_lg1iq")
}, {
"duration": 0.6,
"texture": SubResource("AtlasTexture_7ewps")
}, {
"duration": 1.1,
"texture": SubResource("AtlasTexture_l3uw5")
}, {
"duration": 12.05,
"texture": SubResource("AtlasTexture_cv775")
}],
"loop": false,
"name": &"meurt",
"speed": 5.0
}, {
"frames": [{
"duration": 0.6,
"texture": SubResource("AtlasTexture_cgkrl")
}, {
"duration": 0.9,
"texture": SubResource("AtlasTexture_ltmng")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kul21")
}, {
"duration": 107.2,
"texture": SubResource("AtlasTexture_bn7gp")
}],
"loop": true,
"name": &"meurt_frapper",
"speed": 5.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_onr3x")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_gos7e")
}],
"loop": true,
"name": &"repos",
"speed": 5.0
}, {
"frames": [{
"duration": 0.5,
"texture": SubResource("AtlasTexture_3hj08")
}, {
"duration": 5.7,
"texture": SubResource("AtlasTexture_30wqp")
}],
"loop": false,
"name": &"sauter",
"speed": 5.0
}]

[sub_resource type="RectangleShape2D" id="RectangleShape2D_7sgir"]
size = Vector2(44, 89.625)

[node name="personnages" type="CharacterBody2D" groups=["player"]]
collision_layer = 3
collision_mask = 3
script = SubResource("GDScript_6bys2")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="." groups=["player"]]
modulate = Color(1, 0.66, 0.66, 1)
position = Vector2(293, 437)
scale = Vector2(0.404526, 0.404527)
sprite_frames = SubResource("SpriteFrames_kyng0")
animation = &"meurt"
speed_scale = 1.235

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(296, 452.813)
shape = SubResource("RectangleShape2D_7sgir")

[node name="delai_mort" type="Timer" parent="."]
wait_time = 2.459
one_shot = true

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2(301, 414)
scale = Vector2(1, 0.999999)
zoom = Vector2(2, 2)
script = ExtResource("7_wuymh")

[node name="BulletShoot" type="Marker2D" parent="."]
position = Vector2(320, 468)

[node name="AudioStreamPlayer2D" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("8_tn5gq")
volume_db = 2.811

[node name="AudioStreamPlayer2D2" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("9_wo6p4")
volume_db = 3.748

[node name="AudioStreamPlayer2D3" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("10_3hj08")
volume_db = 6.559

[node name="AudioStreamPlayer2D4" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("11_30wqp")

[node name="AudioStreamPlayer2D5" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("12_onr3x")
volume_db = 2.811

[node name="AudioStreamPlayer2D6" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("13_gos7e")
